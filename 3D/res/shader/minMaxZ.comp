#version 430 compatibility
#extension GL_ARB_compute_shader : enable
#extension GL_ARB_compute_variable_group_size : enable

layout(std430, binding=3) buffer MinMaxDepth
{
	vec2 minMax[];
};

layout(local_size_variable) in;

shared uint minZ;
shared uint maxZ;

void main()
{
	uvec3 gid = gl_GlobalInvocationID;
	uint localID = gl_LocalInvocationID.x + gl_LocalInvocationID.y * 16; 

	uint z = floatBitsToInt(imageLoad(0,uvec3(gid.x,gid.y,0)).r);

	if(localID == 0)
	{
		minZ = 0x7F7FFFFF;
		maxZ = 0;
	}

	memoryBarrierShared();
	
	if(z != 0)
	{
		atomicMax(maxZ, z);
		atomicMin(minZ, z);
	}

	memoryBarrierShared();

	float maxZf = intBitsToFloat(maxZ);
	float minZf = intBitsToFloat(minZ);

	uvec3 groupID = gl_WorkGroupID;
	uint tileIndex = groupID.x + groupID.y * glNumWorkGroups.x;

	if(localID == 0)
	{
		minMax[tileIndex] = vec2(minZf, maxZf);
	}
}